//This file is automatically generated. DO NOT EDIT!

#include <RobotRaconteur.h>
#include <boost/signals2.hpp>
#include "edu__rpi__cats__sensors__camera_interface.h"
#pragma once

namespace edu
{
namespace rpi
{
namespace cats
{
namespace sensors
{
namespace kinect2_tracker
{

class HandData;
class HandTracker;

class HandData : public RobotRaconteur::RRStructure {
public:
uint16_t color_x;
uint16_t color_y;
uint16_t depth_x;
uint16_t depth_y;
double x;
double y;
double z;

virtual std::string RRType() {return "edu.rpi.cats.sensors.kinect2_tracker.HandData";  }
};

class HandTracker : public virtual RobotRaconteur::RRObject
{
public:
virtual uint8_t EnableSensors()=0;

virtual uint8_t DisableSensors()=0;

virtual RR_SHARED_PTR<edu::rpi::cats::sensors::camera_interface::ImageHeader > getImageHeader()=0;

virtual RR_SHARED_PTR<edu::rpi::cats::sensors::camera_interface::ImageHeader > getDepthImageHeader()=0;

virtual RR_SHARED_PTR<edu::rpi::cats::sensors::camera_interface::Image > getCurrentImage()=0;

virtual RR_SHARED_PTR<edu::rpi::cats::sensors::camera_interface::Image16 > getCurrentDepthImage()=0;

virtual RR_SHARED_PTR<HandData > getLeftHand()=0;

virtual RR_SHARED_PTR<HandData > getRightHand()=0;

virtual std::string RRType() {return "edu.rpi.cats.sensors.kinect2_tracker.HandTracker";  }
};

}
}
}
}
}

